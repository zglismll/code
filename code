链表
最后需要加->next = nullptr;
链表封装  (重组一个链表,Notice:最后需要加->next = nullptr;否则会出现循环)
归并排序常见格式：
if(a==b)
return ;
else
{ int m = (a+b)/2;
   merge(a,m);
   merge(m+1,b);
}

sort(A.begin(),A.end(),cmp);
cmp加static
static int cmp

链表归并排序 
快慢指针；注意区间长度为2个节点的情况
每次剖开加nullptr;


区间相交情况很多，先找不相交。

LIS nlogn解法
leetcode 300


数字转字符
while(num)
{
}
注意num一开始为0不进入循环情况；
注意输出“00000”若为数字输出应改为“0”；


(n&(n-1)) 二进制最右边1变为0，计算二进制中1个数
如果(n&(n-1))==0 这个数是2的幂次。(非负）

堆排序
n/2-1 堆末父节点
0 堆首节点
2*i+1 左节点
2*i+2 右节点


优先队列
排序函数重载
